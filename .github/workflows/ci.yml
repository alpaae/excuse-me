name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Build application
      run: npm run build
      env:
        ENV_MODE: ci
        NEXT_TELEMETRY_DISABLED: '1'
        NODE_OPTIONS: --max-old-space-size=4096
        NEXT_PUBLIC_BASE_URL: http://localhost:3000
        # ⬇️ валидные фиктивные значения под Zod-схему Supabase
        NEXT_PUBLIC_SUPABASE_URL: https://demo-project.supabase.co
        NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.mock.payload.signature
        # остальное оставь как есть
        SUPABASE_SERVICE_ROLE: test
        OPENAI_API_KEY: sk-test
        NEXT_PUBLIC_FEATURE_PAYMENTS: 'false'
        STRIPE_SECRET_KEY: test
        STRIPE_PRICE_PRO_MONTHLY: price_test
        STRIPE_WEBHOOK_SECRET: whsec_test
        TG_BOT_TOKEN: test
        
  e2e:
    if: ${{ github.ref == 'refs/heads/main' && secrets.OPENAI_API_KEY && secrets.NEXT_PUBLIC_SUPABASE_URL && secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: '1'
      NODE_OPTIONS: --max-old-space-size=4096
      # валидные фолбэки: если секретов нет, job вообще не запустится из-за if
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://demo-project.supabase.co' }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.mock.payload.signature' }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'sk-test' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Build application
        run: npm run build
      - name: Start application
        run: |
          npm run start &>/dev/null &
          npx wait-on http://localhost:3000
      - name: Run E2E tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
        run: npm run test:e2e
      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
