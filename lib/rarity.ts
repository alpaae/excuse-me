export type Rarity = 'common' | 'rare' | 'legendary';

interface RarityConfig {
  legendary: number;
  rare: number;
  common: number;
}

const RARITY_PROBABILITIES: RarityConfig = {
  legendary: 0.05, // 5%
  rare: 0.25,      // 25%
  common: 0.70     // 70%
};

/**
 * Pick rarity based on total excuses generated before
 * @param totalBefore - Total number of excuses generated by user before this one
 * @returns Rarity level
 */
export function pickRarity(totalBefore: number): Rarity {
  // First excuse is guaranteed legendary
  if (totalBefore === 0) {
    return 'legendary';
  }

  // Generate random number between 0 and 1
  const random = Math.random();
  let cumulative = 0;

  // Check legendary first (5%)
  cumulative += RARITY_PROBABILITIES.legendary;
  if (random < cumulative) {
    return 'legendary';
  }

  // Check rare (25%)
  cumulative += RARITY_PROBABILITIES.rare;
  if (random < cumulative) {
    return 'rare';
  }

  // Default to common (70%)
  return 'common';
}

/**
 * Get rarity display information
 */
export function getRarityInfo(rarity: Rarity) {
  switch (rarity) {
    case 'legendary':
      return {
        label: 'Legendary',
        icon: 'ðŸŽ­',
        color: 'bg-gradient-to-r from-yellow-400 to-orange-500',
        textColor: 'text-yellow-900',
        borderColor: 'border-yellow-300',
        glow: 'shadow-lg shadow-yellow-500/25'
      };
    case 'rare':
      return {
        label: 'Rare',
        icon: 'â˜…',
        color: 'bg-gradient-to-r from-purple-400 to-pink-500',
        textColor: 'text-purple-900',
        borderColor: 'border-purple-300',
        glow: 'shadow-lg shadow-purple-500/25'
      };
    case 'common':
      return {
        label: 'Common',
        icon: 'â€¢',
        color: 'bg-gradient-to-r from-gray-400 to-gray-500',
        textColor: 'text-gray-900',
        borderColor: 'border-gray-300',
        glow: 'shadow-md'
      };
  }
}
